/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.SelectionFoodDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Combo;
import model.Food;
import model.PhieuOrder;
import model.SelectionFood;
import model.UsedSelectionFood;


/**
 *
 * @author Admin
 */
public class GDTimMon extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form SearchFoodFrm
     */
    private ArrayList<Food> listFood= null;
    private ArrayList<Combo> listCombo= null;
    private ArrayList<UsedSelectionFood> listUsedSelectionFood= null;
    private ArrayList<SelectionFood> listSelectionFood= null;
    private static PhieuOrder phieuOrder;
    private UsedSelectionFood usf;
    DefaultTableModel model5;
    public GDTimMon(PhieuOrder phieuOrder) {
        initComponents();
        this.setLocationRelativeTo(null);
        model5 = (DefaultTableModel)tblResult.getModel();
        btnSearch.addActionListener(this);
        this.phieuOrder = phieuOrder;
        listSelectionFood = new ArrayList<SelectionFood>();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtNameFood = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResult = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tên món/combo");

        btnSearch.setText("Search");

        tblResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblResult);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(76, 76, 76)
                .addComponent(txtNameFood, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnSearch)
                    .addComponent(txtNameFood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultMouseClicked
        // TODO add your handling code here:
        int row = tblResult.getSelectedRow();
        btnSelectClicked(row);
    }//GEN-LAST:event_tblResultMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GDTimMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GDTimMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GDTimMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GDTimMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GDTimMon(phieuOrder).setVisible(true);
            }
        });
    }
    public void btnSelectClicked(int i){
            
            try {   
                    usf = new UsedSelectionFood();
                    usf.setSelectionFood(listSelectionFood.get(i));
                  String input = JOptionPane.showInputDialog("Nhập số lượng: ");
                  
                  
                  if(input.length()>0){
                      
                      int quantity = Integer.parseInt(input);
                      
                      usf.setQuantity(quantity);
                      listUsedSelectionFood = phieuOrder.getUsedSelectionFood();
                      if(listUsedSelectionFood==null){
                          System.out.println(listUsedSelectionFood);
                        listUsedSelectionFood = new ArrayList<UsedSelectionFood>();
                        listUsedSelectionFood.add(usf);
                      }
                      else{          
                      listUsedSelectionFood = phieuOrder.getUsedSelectionFood();
                      boolean check = false;
                      if(usf.getSelectionFood().getFood()!=null){
                          
                      for(int j =0;j<listUsedSelectionFood.size();j++){
                          check = true;
                          if( listUsedSelectionFood.get(j).getSelectionFood().getCombo()==null&&listUsedSelectionFood.get(j).getSelectionFood().getFood().getName().equals(usf.getSelectionFood().getFood().getName())){
                              listUsedSelectionFood.get(j).setQuantity(listUsedSelectionFood.get(j).getQuantity()+usf.getQuantity());
                              check = true;
                              break;
                          }
                          else {
                              check =false;
                          }
                      
                        }
                        if(!check){
                            listUsedSelectionFood.add(usf);
                          }
                      }
                      if(usf.getSelectionFood().getCombo()!=null){
                          check = true;
                      for(int j =0;j<listUsedSelectionFood.size();j++){
                          if(listUsedSelectionFood.get(j).getSelectionFood().getFood()==null&& listUsedSelectionFood.get(j).getSelectionFood().getCombo().getName().equals(usf.getSelectionFood().getCombo().getName())){
                              listUsedSelectionFood.get(j).setQuantity(listUsedSelectionFood.get(j).getQuantity()+usf.getQuantity());
                              check = true;
                              break;
                          }
                          else {
                              check =false;
                          }
                        }
                        if(!check){
                            listUsedSelectionFood.add(usf);
                          }
                      }
                      
                      }
                      phieuOrder.setUsedSelectionFood(listUsedSelectionFood);
                      System.out.println(listUsedSelectionFood.size());
                            
                   new GDXacNhanOrder(phieuOrder).setVisible(true);
                      this.dispose();
                  }
                   
            } catch (NullPointerException e) {
            }
    }
    public void btnSearchClick(){
        SelectionFoodDAO sf = new SelectionFoodDAO();
        String name = txtNameFood.getText();
        if(name==""){
            JOptionPane.showConfirmDialog(this,"Nhập tên món ăn!");
        }
        else{
            listFood = sf.getFoodByName(name);
            listCombo = sf.getComboByName(name);
            
        }
        
        fillTable();
    }
 
  
    public void fillTable() {// hien thi ket qua
        model5.setRowCount(0);
        model5.setColumnIdentifiers(new Object[]{"STT","tên", "kiểu", "giá", "mô tả"}); 
        
        if (listCombo.isEmpty()&&listFood.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Không tìm thấy món ăn nào!");
            
        }
  
        int i = 0;
        if(!listCombo.isEmpty()){
        for (Combo c : listCombo) {
            SelectionFood s = new SelectionFood();
            s.setCombo(c);
            listSelectionFood.add(s); 
            model5.addRow(new Object[]{i+1,c.getName(),c.getType(),c.getPrice(),c.getDescription()});
                i++;
        }
        }
        if(!listFood.isEmpty()){
        for (Food f : listFood) {
             SelectionFood s = new SelectionFood();
             s.setFood(f);
             listSelectionFood.add(s);
   
            model5.addRow(new Object[]{i+1,f.getName(),f.getType(),f.getPrice(),f.getDescription()});
                i++;
        }
       
        }
    }
    public void actionPerformed(ActionEvent ae) {
            JButton btn = (JButton)ae.getSource();
          
            if(btn.equals(btnSearch)){
                btnSearchClick();
            }
        
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResult;
    private javax.swing.JTextField txtNameFood;
    // End of variables declaration//GEN-END:variables
}
